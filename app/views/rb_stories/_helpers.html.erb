<!-- story helper tags -->

<select class="status_id helper" id="status_id_options">
  <%- IssueStatus.all.order("position ASC").each do |status| %>
  <option value="<%= status.id %>" class="<%= (status.is_closed? ?  l(:label_closed_issues) + ' ' : "") %>"><%= h status.name %></option>
  <%- end %>
</select>

<%- unless Backlogs.setting[:story_points].blank? -%>
<select class="story_points helper" id="story_points_options">
	<%- (['']+Backlogs.setting[:story_points].split(/,/).collect(&:to_f)).each do |point| %>
	<option value="<%=h point %>"><%=h point %></option>
	<%- end %>
</select>
<%- end -%>

<select class="tracker_id helper" id="tracker_id_options">
  <%- RbStory.trackers(:project => @project, :type => :trackers).each do |tracker| %>
	  <%- if (Backlogs.settings[:default_story_tracker] && tracker.id.to_s==Backlogs.settings[:default_story_tracker]) %>
	  <option value="<%= tracker.id %>" selected="selected"><%= h tracker.name %></option>
	  <%- else %>
	  <option value="<%= tracker.id %>"><%= h tracker.name %></option>
	  <%- end %>
  <%- end %>
</select>

<select class="project_id helper" id="project_id_options">
  <option value="<%= @project.id %>"><%= @project.name %></option>
</select>

<%if User.current.backlogs_preference[:show_category] == '1' %>
<select class="category_id helper" id="category_id_options">
  <option value=""></option>
	<% IssueCategory.where(project_id: @project.id).order("name ASC").each do |category| %>
		<option value="<%= category.id%>"><%=h category.name %></option>
	<%end%>
</select>
<%end%>

<div id="story_template">
  <%
    parameters = {}

    # We set the tracker to the default in the story, because in the tracker selector the same option will be selected
    # by default and we want the status selector to select it's default status by default and it is calculated as the
    # story's tracker's default status.
    default_story_tracker_id = Backlogs.settings[:default_story_tracker]
    parameters[:tracker_id] = default_story_tracker_id if default_story_tracker_id

    template_story = RbStory.new(parameters)
  %>
  <%= render :partial => 'rb_stories/story', :object => template_story %>
</div>

